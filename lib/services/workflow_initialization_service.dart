import 'package:cloud_firestore/cloud_firestore.dart';
import '../models/person_model.dart';

class WorkflowInitializationService {
  static final FirebaseFirestore _firestore = FirebaseFirestore.instance;
  static const String workflowsCollection = 'workflows';

  /// Initialise les workflows par d√©faut s'ils n'existent pas
  static Future<void> initializeDefaultWorkflows() async {
    try {
      print('üîÑ Initialisation des workflows par d√©faut...');
      
      // V√©rifier si des workflows existent d√©j√†
      final existingWorkflows = await _firestore
          .collection(workflowsCollection)
          .limit(1)
          .get();
      
      if (existingWorkflows.docs.isNotEmpty) {
        print('‚úÖ Workflows d√©j√† initialis√©s');
        return;
      }

      final batch = _firestore.batch();
      final now = DateTime.now();

      // 1. Workflow Accueil Nouveau Membre
      final newMemberWorkflow = WorkflowModel(
        id: 'new_member_welcome',
        name: 'Accueil Nouveau Membre',
        description: 'Processus d\'int√©gration et d\'accueil pour les nouveaux membres de l\'√©glise',
        steps: [
          WorkflowStep(
            id: 'initial_contact',
            name: 'Contact Initial',
            description: 'Premier contact et collecte des informations de base',
            order: 1,
            isRequired: true,
            estimatedDuration: 15,
          ),
          WorkflowStep(
            id: 'welcome_call',
            name: 'Appel de Bienvenue',
            description: 'Appel t√©l√©phonique de bienvenue dans les 48h',
            order: 2,
            isRequired: true,
            estimatedDuration: 20,
          ),
          WorkflowStep(
            id: 'pastor_meeting',
            name: 'Rencontre avec le Pasteur',
            description: 'Rendez-vous d\'accueil avec le pasteur principal',
            order: 3,
            isRequired: true,
            estimatedDuration: 45,
          ),
          WorkflowStep(
            id: 'intro_class',
            name: 'Classe d\'Introduction',
            description: 'Participation √† la classe d\'introduction de l\'√©glise',
            order: 4,
            isRequired: false,
            estimatedDuration: 90,
          ),
          WorkflowStep(
            id: 'small_group_intro',
            name: 'Introduction aux Groupes',
            description: 'Pr√©sentation des diff√©rents groupes et minist√®res',
            order: 5,
            isRequired: false,
            estimatedDuration: 30,
          ),
        ],
        isActive: true,
        createdAt: now,
        updatedAt: now,
        createdBy: 'system',
        category: 'Accueil',
        color: '#4CAF50',
        icon: 'waving_hand',
      );

      // 2. Workflow Suivi Pastoral
      final pastoralCareWorkflow = WorkflowModel(
        id: 'pastoral_care',
        name: 'Suivi Pastoral',
        description: 'Accompagnement pastoral personnalis√© pour les membres ayant des besoins sp√©cifiques',
        steps: [
          WorkflowStep(
            id: 'initial_assessment',
            name: '√âvaluation Initiale',
            description: '√âvaluation des besoins et situation personnelle',
            order: 1,
            isRequired: true,
            estimatedDuration: 60,
          ),
          WorkflowStep(
            id: 'prayer_support',
            name: 'Soutien par la Pri√®re',
            description: 'Mise en place d\'un soutien par la pri√®re',
            order: 2,
            isRequired: true,
            estimatedDuration: 15,
          ),
          WorkflowStep(
            id: 'regular_followup',
            name: 'Suivi R√©gulier',
            description: 'Contacts r√©guliers pour accompagnement',
            order: 3,
            isRequired: true,
            estimatedDuration: 30,
          ),
          WorkflowStep(
            id: 'resource_provision',
            name: 'Provision de Ressources',
            description: 'Fourniture de ressources spirituelles ou pratiques',
            order: 4,
            isRequired: false,
            estimatedDuration: 20,
          ),
        ],
        isActive: true,
        createdAt: now,
        updatedAt: now,
        createdBy: 'system',
        category: 'Pastoral',
        color: '#9C27B0',
        icon: 'favorite',
      );

      // 3. Workflow Formation Leadership
      final leadershipTrainingWorkflow = WorkflowModel(
        id: 'leadership_training',
        name: 'Formation Leadership',
        description: 'Programme de formation et d√©veloppement pour les futurs leaders',
        steps: [
          WorkflowStep(
            id: 'leadership_assessment',
            name: '√âvaluation Leadership',
            description: '√âvaluation des dons et aptitudes au leadership',
            order: 1,
            isRequired: true,
            estimatedDuration: 90,
          ),
          WorkflowStep(
            id: 'mentoring_setup',
            name: 'Mise en Place Mentorat',
            description: 'Attribution d\'un mentor exp√©riment√©',
            order: 2,
            isRequired: true,
            estimatedDuration: 30,
          ),
          WorkflowStep(
            id: 'leadership_course',
            name: 'Cours de Leadership',
            description: 'Participation au cours de formation leadership',
            order: 3,
            isRequired: true,
            estimatedDuration: 480, // 8 heures r√©parties
          ),
          WorkflowStep(
            id: 'practical_application',
            name: 'Application Pratique',
            description: 'Mise en pratique dans un minist√®re supervis√©',
            order: 4,
            isRequired: true,
            estimatedDuration: 120,
          ),
          WorkflowStep(
            id: 'leadership_evaluation',
            name: '√âvaluation Finale',
            description: '√âvaluation des comp√©tences acquises',
            order: 5,
            isRequired: true,
            estimatedDuration: 60,
          ),
        ],
        isActive: true,
        createdAt: now,
        updatedAt: now,
        createdBy: 'system',
        category: 'Formation',
        color: '#FF9800',
        icon: 'school',
      );

      // 4. Workflow Visite Malade
      final sickVisitWorkflow = WorkflowModel(
        id: 'sick_visit',
        name: 'Visite aux Malades',
        description: 'Protocole de visite et soutien aux membres malades ou hospitalis√©s',
        steps: [
          WorkflowStep(
            id: 'notification_received',
            name: 'R√©ception Notification',
            description: 'R√©ception et enregistrement de l\'information',
            order: 1,
            isRequired: true,
            estimatedDuration: 5,
          ),
          WorkflowStep(
            id: 'initial_contact',
            name: 'Contact Initial',
            description: 'Premier contact avec la famille ou le malade',
            order: 2,
            isRequired: true,
            estimatedDuration: 15,
          ),
          WorkflowStep(
            id: 'visit_planning',
            name: 'Planification Visite',
            description: 'Organisation de la visite (lieu, horaire, participants)',
            order: 3,
            isRequired: true,
            estimatedDuration: 10,
          ),
          WorkflowStep(
            id: 'visit_execution',
            name: 'R√©alisation Visite',
            description: 'Visite effective avec pri√®re et encouragement',
            order: 4,
            isRequired: true,
            estimatedDuration: 45,
          ),
          WorkflowStep(
            id: 'followup_support',
            name: 'Suivi Continu',
            description: 'Suivi r√©gulier selon l\'√©volution de la situation',
            order: 5,
            isRequired: false,
            estimatedDuration: 20,
          ),
        ],
        isActive: true,
        createdAt: now,
        updatedAt: now,
        createdBy: 'system',
        category: 'Pastoral',
        color: '#f44336',
        icon: 'healing',
      );

      // 5. Workflow Pr√©paration Bapt√™me
      final baptismPrepWorkflow = WorkflowModel(
        id: 'baptism_preparation',
        name: 'Pr√©paration au Bapt√™me',
        description: 'Processus de pr√©paration et accompagnement vers le bapt√™me',
        steps: [
          WorkflowStep(
            id: 'declaration_intent',
            name: 'D√©claration d\'Intention',
            description: 'Manifestation du d√©sir d\'√™tre baptis√©',
            order: 1,
            isRequired: true,
            estimatedDuration: 15,
          ),
          WorkflowStep(
            id: 'testimony_sharing',
            name: 'Partage de T√©moignage',
            description: 'Partage du t√©moignage de foi personnel',
            order: 2,
            isRequired: true,
            estimatedDuration: 30,
          ),
          WorkflowStep(
            id: 'baptism_class',
            name: 'Classe de Bapt√™me',
            description: 'Participation √† la classe de pr√©paration au bapt√™me',
            order: 3,
            isRequired: true,
            estimatedDuration: 120,
          ),
          WorkflowStep(
            id: 'pastor_interview',
            name: 'Entretien Pastoral',
            description: 'Entretien final avec le pasteur',
            order: 4,
            isRequired: true,
            estimatedDuration: 45,
          ),
          WorkflowStep(
            id: 'baptism_scheduling',
            name: 'Planification Bapt√™me',
            description: 'Programmation de la c√©r√©monie de bapt√™me',
            order: 5,
            isRequired: true,
            estimatedDuration: 10,
          ),
        ],
        isActive: true,
        createdAt: now,
        updatedAt: now,
        createdBy: 'system',
        category: 'Sacrements',
        color: '#2196F3',
        icon: 'water_drop',
      );

      // Ajouter tous les workflows au batch
      final workflows = [
        newMemberWorkflow,
        pastoralCareWorkflow,
        leadershipTrainingWorkflow,
        sickVisitWorkflow,
        baptismPrepWorkflow,
      ];

      for (final workflow in workflows) {
        final docRef = _firestore.collection(workflowsCollection).doc();
        final workflowWithId = WorkflowModel(
          id: docRef.id,
          name: workflow.name,
          description: workflow.description,
          steps: workflow.steps,
          isActive: workflow.isActive,
          createdAt: workflow.createdAt,
          updatedAt: workflow.updatedAt,
          createdBy: workflow.createdBy,
          category: workflow.category,
          color: workflow.color,
          icon: workflow.icon,
        );
        batch.set(docRef, workflowWithId.toFirestore());
      }

      await batch.commit();
      print('‚úÖ ${workflows.length} workflows par d√©faut cr√©√©s avec succ√®s');

    } catch (e) {
      print('‚ùå Erreur lors de l\'initialisation des workflows: $e');
      rethrow;
    }
  }

  /// Cr√©e un workflow personnalis√©
  static Future<String> createCustomWorkflow(WorkflowModel workflow) async {
    try {
      final docRef = _firestore.collection(workflowsCollection).doc();
      final workflowWithId = WorkflowModel(
        id: docRef.id,
        name: workflow.name,
        description: workflow.description,
        steps: workflow.steps,
        isActive: workflow.isActive,
        createdAt: DateTime.now(),
        updatedAt: DateTime.now(),
        createdBy: workflow.createdBy,
        category: workflow.category,
        color: workflow.color,
        icon: workflow.icon,
      );
      
      await docRef.set(workflowWithId.toFirestore());
      print('‚úÖ Workflow personnalis√© "${workflow.name}" cr√©√© avec succ√®s');
      return docRef.id;
    } catch (e) {
      print('‚ùå Erreur lors de la cr√©ation du workflow: $e');
      throw Exception('Failed to create workflow: $e');
    }
  }

  /// V√©rifie et initialise les workflows si n√©cessaire
  static Future<void> ensureWorkflowsExist() async {
    try {
      final workflows = await _firestore
          .collection(workflowsCollection)
          .where('isActive', isEqualTo: true)
          .limit(1)
          .get();
      
      if (workflows.docs.isEmpty) {
        await initializeDefaultWorkflows();
      }
    } catch (e) {
      print('‚ùå Erreur lors de la v√©rification des workflows: $e');
    }
  }
}